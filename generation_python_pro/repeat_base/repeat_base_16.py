# Назовем набор различных натуральных чисел группой. Например:(13,4,22,40).
# Тогда длиной группы будем считать количество чисел в группе.
# Например, длина группы (13,4,22,40) равна 4.
#
# Дана последовательность натуральных чисел от 1 до n включительно.
# Напишите программу, которая группирует все числа данной последовательности
# по сумме их цифр и определяет длину группы, содержащей наибольшее количество чисел.
#
# Формат входных данных
# На вход программе подается натуральное число n.
#
# Формат выходных данных
# Программа должна сгруппировать все числа из натуральной последовательности от 1 до n
# по сумме их цифр и определить длину группы, содержащей наибольшее количество чисел.
#
# Примечание 1. Рассмотрим третий тест, в которомn=20.
# Запишем последовательность чисел от1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20
# Сгруппируем полученные числа по сумме их цифр:
# (1,10),(2,11,20),(3,12),(4,13),(5,14),(6,15),(7,16),(8,17),(9,18),(19)
#
# Итак, длина группы с наибольшим количеством чисел равна 3.

n = list(range(1, int(input()) + 1))

def maxi_group(n):
    len_n = [sum(map(int, str(i))) for i in n]

    d = {}
    for k, v in zip(len_n, n):
        d[k] = d.get(k, ()) + (v,)

    return max(len(i) for i in d.values())

print(maxi_group(n))





# писал писал функцию продумывал а в ТЗ и примере все горазго проще.
# никаких округлений после 10 повторно складывать ничего не надо 19 это 10
# и повторно значения тоже складывать не надо т.к. сильно много старался над фнукцией оставлю её тут. остальное перепишу

# тут все работает и словарик вывод что надо. только условие другое )
# def maxi_group(n):
#     len_n = []
#     for el in n:
#         sum_num = el
#         while sum_num > 9:
#             sum_num = sum(map(int, str(sum_num)))
#         len_n.append(sum_num)
#
#     d = {}
#     for k, v in zip(len_n, n):
#         d[k] = d.get(k, ()) + (v,)
#
#     return d








