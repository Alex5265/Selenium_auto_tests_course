# Реализуйте генераторную функцию, которая принимает один аргумент:
#
# iterable — итерируемый объект
# Функция должна возвращать генератор, порождающий последовательность кортежей,
# каждый из которых содержит очередной элемент итерируемого объекта iterable,
# а также предыдущий и следующий за ним элементы:
#
# (<предыдущий элемент>, <очередной элемент>, <следующий элемент>)
# Для первого элемента предыдущим считается значение None, для последнего
# элемента следующим считается так же значение None.
#
# Примечание 1. Элементы итерируемого объекта в возвращаемом функцией генераторе
# должны располагаться в своем исходном порядке.
#
# Примечание 2. Гарантируется, что итерируемый объект, передаваемый в функцию,
# не является множеством.
#
# Примечание 3. В тестирующую систему сдайте программу, содержащую только
# необходимую функцию around(), но не код, вызывающий ее.




def around(iterable):
    it = iter(iterable)
    first = None
    second = next(it, None)
    last = next(it, None)
    while second is not None:
        yield first, second, last
        first, second, last = second, last, next(it, None)




iterator = iter('hey')

print(*around(iterator))





