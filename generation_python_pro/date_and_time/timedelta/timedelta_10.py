# Реализуйте функцию fill_up_missing_dates(), которая принимает на вход один аргумент:
#
# dates — список строковых дат в формате DD.MM.YYYY
# Функция должна возвращать список, в котором содержатся все даты из списка dates,
# расположенные в порядке возрастания, а также все недостающие промежуточные даты.
#
# Примечание 1. Рассмотрим первый тест. Список dates содержит период с 01.11.2021 по 07.11.2021:
#
# dates = ['01.11.2021', '07.11.2021', '04.11.2021', '03.11.2021']
# в котором отсутствуют даты 02.11.2021, 05.11.2021, 06.11.2021. Тогда вызов функции:
#
# fill_up_missing_dates(dates)
# должен вернуть список:
#
# ['01.11.2021', '02.11.2021', '03.11.2021', '04.11.2021', '05.11.2021', '06.11.2021', '07.11.2021']
# Примечание 2. Функция должна создавать и возвращать новый список, а не изменять переданный.

from datetime import datetime, timedelta


def fill_up_missing_dates(dates):
    result = []
    pattern = '%d.%m.%Y'
    dt = [datetime.strptime(i, pattern) for i in dates]
    dt_min, dt_max = min(dt), max(dt)
    for i in range((dt_max - dt_min).days + 1):
        result.append((dt_min + timedelta(days=i)).strftime(pattern))

    return result


dates = ['01.11.2021', '07.11.2021', '04.11.2021', '03.11.2021']

print(fill_up_missing_dates(dates))
