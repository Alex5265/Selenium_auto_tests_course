# Тренировка заполнения  матриц.
# Задание на вход поступает n и m количество строк и столбцов
# Необходимо заполнить матрицу диагоналями

# Самому удалось создать заполнение в 3 вложенных цикла. крайне не эфективно.
# в решених нашел вариант с 1 циклов что кажется невероятно. поэтому оставляю его ниже.

# получаем количество строк и столбцов
n,m = [int(i) for i in input().split()]

# создаем матрицу из 0 с необходимым количеством строк и столбцов
matr = [[0] * m for i in range(n)]

# вводим переменную которая и будет заполнять нашу таблицу
n_m = 1

# в 3 вложенных циклах совершаем проверку индексов если их сумма равна значению верхнего цикла,
# то записываем в них значение н_м и прибавляем 1 к заполнителю (подробнее ниже)
for q in range(n * m):
    for i in range(n):
        for j in range(m):
            if i + j == q:
                matr[i][j] = str(n_m).ljust(2)
                n_m += 1


for i in matr:
    print(*i)

print()

# Чужой код. Попытаемся его понять и разобраться.
# Создается матрица с необходимым числом строк и столбцов
matrix = [[1] * m for _ in range(n)]

# Вводятся 3 переменные - ряд, колонна, и диагональ
row, col, diag = 0, 0, 0

# в одном цикле от 1 до произведения сторон: из колонны вычитается единица, к ряду прибавляется единица,
# проверяется если колона меньше 0 или ряд равен n (количеству строк) к диагонале прибавляется 1
# значение колонны приравнивается диагонали, если диагональ больше
for i in range(1, n * m):
    col -= 1
    row += 1
    if col < 0 or row == n:
        diag += 1
        col = diag if diag < m else m - 1
        row = diag - col

    matrix[row][col] += i

for i in range(n):
    for j in range(m):
        print(str(matrix[i][j]).ljust(3), end="")
    print()



# 3 5
# На выходе
#
# 1  2  4  7  10    Индексы   00  01  02  03  04
# 3  5  8  11 13              10  11  12  13  14
# 6  9  12 14 15              20  21  22  23  24
#               смысл заполнения в 3ех циклах в том, что сумма индексов
#              в каждой диагонали одинаков поэтому при совпадении суммы вносится
#                               заполнитель в таблицу